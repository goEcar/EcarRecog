apply plugin: 'com.android.application'
apply plugin: 'com.antfortune.freeline'



buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.aspectj:aspectjtools:1.8.9'
    }
}
android {
    compileSdkVersion 24
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId "com.mine.recog"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.2"
        buildConfigField "boolean", "isShowCast", "true" //是否显示转换按钮

    }

    signingConfigs {
        debug {
            v2SigningEnabled false
            keyAlias "test"
            keyPassword "123456"
            storeFile new File(getProjectDir().absolutePath + "/buildsystem/YCDEVELOP.jks")
            storePassword "123456"//密钥库的密码
        }
        release {
            v2SigningEnabled false
            storeFile new File(getProjectDir().absolutePath + "/buildsystem/YCDEVELOP.jks")
            keyAlias "test"
            keyPassword "123456"
            storePassword "123456"//密钥库的密码
        }

    }

    buildTypes {
        debug {
            def isMinifyEnabled = false;//混淆（打正式包）
            debuggable true
            jniDebuggable true
            minifyEnabled isMinifyEnabled
            zipAlignEnabled isMinifyEnabled
            shrinkResources isMinifyEnabled

            //加载默认混淆配置文件
            if (isMinifyEnabled) {
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android.txt'
            }
            signingConfig signingConfigs.release

        }

        release {
            def isMinifyEnabled = false;//混淆（打正式包）
            debuggable true
            minifyEnabled isMinifyEnabled
            zipAlignEnabled isMinifyEnabled
            shrinkResources isMinifyEnabled
            //加载默认混淆配置文件
            if (isMinifyEnabled) {
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android.txt'
            }
            signingConfig signingConfigs.release

        }
    }
    sourceSets {
        main {
  //          jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['assets']
        }
    }


    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/maven/com.squareup.okio/okio/pom.properties'
        exclude 'META-INF/maven/com.squareup.okio/okio/pom.xml'
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:24.1.1'
    compile 'com.mylhyl:acp:1.0.0'
    //    compile(name: 'ecarrecoglib-release', ext: 'aar')
    //aop框架
    compile 'com.github.goEcar:EcarAspectJ:1.0.0'
    compile('com.github.goEcar:EcarWintoneSeria:1.0.8')
    compile 'com.github.goEcar:EcarEncryption:latest.release'
    compile 'com.github.goEcar:EcarBugly:latest.release'
    compile 'com.github.goEcar:EcarNetFream:latest.release'
//    compile project(':mylibrary')
    compile project(path: ':mylibrary' , configuration: 'debug')
}


import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

final def log = project.logger
final def variants = project.android.applicationVariants

variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return;
    }

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.5",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}